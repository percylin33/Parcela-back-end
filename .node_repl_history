a-1
a=5;
.exit
function saludar(nombre){}
.editor
.help
console.log( textoAsteriscos("hola"))
let textoUnderscore = crearCadena.bind();
let textoGuiones = crearCadena.bind();
let textoAsteriscos = crearCadena.bind(null,"*","*");
}
    return delimitadorIzquierda + cadena + delimitadorDerecha;
function crearCadena(delimitadorIzquierda, delimitadorDerecha, cadena) {
otroContador()
const otroContador = counter()
}
  }
    return conta++
  return function () {
  var conta=0;
function counter() {
otroContador()
const otroContador = counter()
}
  }
    return conta++
  return function () {
  var conta=0;
function counter() {
otroContador()
const otroContador = counter()
}
  }
    conta++
  return function () {
  var conta=0;
function counter() {
otroContador()
otroContador()      // 1
const otroContador = counter()
}
  }
     acumu+1
  return function () {
  var acumu =0 
function counter() {
otroContador()
otroContador()      // 1
const otroContador = counter()
}
  }
     acumu= acumu+1
  return function () {
  var acumu =0 
function counter() {
otroContador()     otroContador()
const otroContador = counter()
}
  }
     acumu= acumu+1
  return function () {
  var acumu =0 
function counter() {
console.log(test());
var test = obj.prop.getFullname;
console.log(obj.prop.getFullname());
};
   },
      },
         return this.fullname;
      getFullname: function () {
      fullname: 'Aurelio De Rosa',
   prop: {
   fullname: 'Natalia Nerea',
var obj = {
var fullname = 'Juan Perez';
getFood(false);
}
   return snack;
   }
     return snack;
      var snack = 'Friskies';
   if (food) {
function getFood(food) {
var snack = 'Meow Mix';
getFood(false);
}
   return snack;
   }
     return snack;
      var snack = 'Friskies';
function getFood(food) {
getFood(false);var snack = 'Meow Mix';
}
   return snack;
   }
     return snack;
      var snack = 'Friskies';
   if (food) {
function getFood(food) {
getFood(false);
}
   return snack;
   }
     return snack;
       snack = 'Friskies';
   if (food) {
function getFood(food) {
var snack = 'Meow Mix';
getFood(false);
}
   return snack;
   }
     return snack;
       snack = 'Friskies';
   if (food) {
function getFood(food) {
getFood(false);
}
   return snack;
      }
      //var snack = 'Friskies';
   if (food) {
function getFood(food) {
var snack = 'Meow Mix';
getFood(false);
}
   return snack;
   }
      return snack;
      var snack = 'Friskies';
   if (food) {
function getFood(food) {
test();
}
   }
      return 2;
   function foo() {
   var a = 1;
   console.log(foo());
   console.log(a);
function test() {
[33] ==![33]
[33] ==[33]
[] ==! []
true >1
3<2<1
3>2>1
[3]-[3]+[10 , 5]
[3]+[3]-[10 , 5]
[3]+[3]+[10 , 5]
[3]+[3]+[10,5]
[3]+[3]+[10]
2 && 5
5 && 2
parseInt("09")
{5}[0]
{}[0]
7 / 0
"4px" - 2
"4" - 2
"$" + 4 + 5
4 + 5 + "px"
"2" * "3"
console.log(pm);
console.log(instructor);
}
   console.log(pm);
   console.log(instructor);
   let pm = 'Reverse Flash';
   var instructor = 'The Flash';
if (true) {
let pm = 'Franco';
var instructor = 'Tony';
console.log(instructor);
})();
   }
      var instructor      console.log(instructor);
   if (true) {
(function () {
console.log(instructor);
var instructor = 'Tony';
}console.log(instructor);
   }
      console.log(instructor);
      var instructor = 'Franco';
   if (true) {
(function () {
console.log(instructor);
var instructor = 'Tony';
console.log(instructor);
}
   var instructor = 'Franco';
if (!true) {
var instructor = 'Tony';
console.log(instructor);
}
   var instructor = 'Franco';
if (true) {
var instructor = 'Tony';
baz = 2;
var bar = 1;
}
   console.log('Hola!');
function foo() {
foo();
//console.log(baz);
console.log(bar);
var bar = 1;
}
   console.log('Hola!');
function foo() {
foo();
console.log(baz);
console.log(bar);
console.log(x);
console.log(b);
c(8, 9, 10);
};
   console.log(b);
   f(a, b, c);
   };
      var x = 5;
      b = c;
      console.log(b);
      b = a;
   var f = function (a, b, c) {
   console.log(a);
   console.log(x);
   var x = 10;
var c = function (a, b, c) {
var b = 10;
var a = 5;
x = 1;
console.log(test());
bj.prop.getFullname;
var test = o
console.log(obj.prop.getFullname());
};
   },
      },
         return this.fullname;
      fullname: 'A      getFullname: function () {
   prop: {
   fullname: 'Natalia Nerea',
var obj = {
var fullname = 'Juan Perez';
console.log(test());
var test = obj.prop.getFullname;
console.log(obj.prop.getFullname());
};
   },
      },
         return this.fullname;
      getFullname: function () {
      fullname: 'Aurelio De Rosa',
   prop: {
   fullname: 'Natalia Nerea',
var obj = {
var fullname = 'Juan Perez';
getFood(false);
}
   return snack;
   }
      return snack;
      var snack = 'Friskies';
   if (food) {
function getFood(food) {
var snack = 'Meow Mix';
test();
}
   }
      return 2;
   function foo() {
   var a = 1;
   console.log
   console.log(a);
function test() {
[] == ![]
3>2>1
[3]+[3]-[10]
0 || 5
5 || 0
2 && 5
5 && 2
parseInt("09")
{}[0]
7 / 0
"4px" - 2
"4" - 2
"$" + 4 + 5
[] == ![]
3>2>1
[3]+[3]-[10]
0 || 5
5 || 0
5
2 && 
5 && 2
parseInt("09")
{}[0]
7 / 0
"4" - 2"4px" - 2
"$" + 4 + 5
4 + 5 + "px"
"2" * "3"
6 / "3"
4 + 5 + "px"
DecimalABinario(5)
}
return n;
var n = numero.join('')
numero.unshift(num)
}
   }
      num=Math.floor(num/2)
      numero.unshift(0)
   }else{
      num= Math.floor(num/2)
      numero.unshift(1)
   if (num%2!=0) {
  var numero
while (num>1) {
function DecimalABinario(num) {
node
numeB
combAb(22)
}
    return cobertidoB
    }
        }
            numero=numero/2
            cobertidoB.unshift(0);
        }else{
          numero=numero/2
          cobertidoB.unshift(1);
        if(numero%2!=0){
    for (let i = 0; i <numero ; i++) {
function combAb(numero) {
cobertidoG=0
cobertidoB=0
numeB= 1111
numeG= 22;
mayuscula('nfhhfgfb')
}
  return nombre.charAt(0).toUpperCase() + nombre.slice(1)
  //Tu código:
  //ej: Recibe "mario" ----> Devuelve "Mario"
  //La función recibe un nombre y debe devolver el mismo que recibe pero con su primer letra en mayúscula
function mayuscula(nombre) {
mayuscula('marii')
}
  return nombre.charAt(0).toUpperCase() + this.slice(1)
  //Tu código:
  //ej: Recibe "mario" ----> Devuelve "Mario"
  //La función recibe un nombre y debe devolver el mismo que recibe pero con su primer letra en mayúscula
function mayuscula(nombre) {
mayuscula('mwrio')
}
  return nombre.charAt(0).toUpperCase() + nombre.slice(1)
  //Tu código:
  //ej: Recibe "mario" ----> Devuelve "Mario"
  //La función recibe un nombre y debe devolver el mismo que recibe pero con su primer letra en mayúscula
function mayuscula(nombre) {
mayuscula('mario')
}
  return nombre.charAt(0).toUpperCase() + slice(1)
  //Tu código:
  //ej: Recibe "mario" ----> Devuelve "Mario"
  //La función recibe un nombre y debe devolver el mismo que recibe pero con su primer letra en mayúscula
function mayuscula(nombre) {
mayuscula('juan')
}
  return nombre.charAt(0).toUpperCase()
  //Tu código:
  //ej: Recibe "mario" ----> Devuelve "Mario"
  //La función recibe un nombre y debe devolver el mismo que recibe pero con su primer letra en mayúscula
function mayuscula(nombre) {
dobles
})
}
	return x*2;
if (x%2==0) {
var dobles= num.map(function (x){
var num= [1,2,5,5,1,1]
})
	console.log(elemento)
num.forEach(function(elemento,indice){
var num= [1,2,5,5,1,1]
} 
    else {return 'Es fin de semana' }
  if (numeroDeDia<7 &&numeroDeDia>1) { return 'Es dia Laboral'  }
  //Escribe tu código aquí   
  //si el día corresponde a Sábado o Domingo y “Es dia Laboral” en caso contrario. 
  //Realiza una función que dado el número del día de la semana, retorne: Es fin de semana
  //Suponga que los días de la semana se codifican como 1 = Domingo, 2 = Lunes y así sucesivamente. 
function diaDeLaSemana(numeroDeDia) {
diaDeLaSemana()
} 
    if (numeroDeDia>6 &&numeroDeDia<2) {return 'Es fin de semana' }
  if (numeroDeDia<7 &&numeroDeDia>1) { return 'Es dia Laboral'  }
  //Escribe tu código aquí   
  //si el día corresponde a Sábado o Domingo y “Es dia Laboral” en caso contrario. 
  //Realiza una función que dado el número del día de la semana, retorne: Es fin de semana
  //Suponga que los días de la semana se codifican como 1 = Domingo, 2 = Lunes y así sucesivamente. 
function diaDeLaSemana(numeroDeDia) {
}
return objeto.propiedad
  // Tu código:
  // De lo contrario, devuelve "false"
  // "propiedad" es un string
  // Devuelve "true" si el objeto (parámetro "objeto") tiene una propiedad (key) cuyo nombre es igual al valor del argumento "propiedad"
function tienePropiedad(objeto, propiedad) {
}ç
  objeto.propiedad
  // Tu código:
  // De lo contrario, devuelve "false"
  // "propiedad" es un string
  // Devuelve "true" si el objeto (parámetro "objeto") tiene una propiedad (key) cuyo nombre es igual al valor del argumento "propiedad"
function tienePropiedad(objeto, propiedad) {
sumaReduce
},1);
	return acc*elemento;
var sumaReduce = nurm.reduce(function(acc,elemento){
nurm
nurm.push(7)
},1);
	return acc*elemento;
var sumaReduce = nurm.reduce(function(acc,elemento){
var nurm =[1,2,3,4,5,6];
nurm
nurm =nurm.push(7)
},1);
	return acc*elemento;
var sumaReduce = nurm.reduce(function(acc,elemento){
var nurm =[1,2,3,4,5,6];
nurm.push(7)
nurm=nurm.push(7)
nurm=nurm.push
},1);
	return acc*elemento;
var sumaReduce = nurm.reduce(function(acc,elemento){
var nurm =[1,2,3,4,5,6];
sumaReduce
},1);
	return acc*elemento;
var sumaReduce = nurm.reduce(function(acc,elemento){
var nurm =[1,2,3,4,5,6,7];
nurm
nurm.push(7)
},1);
	return acc*elemento;
var sumaReduce = nurm.reduce(function(acc,elemento){
var nurm =[1,2,3,4,5,6];
nurm
sumaReduce
nurm
nurm.push(7)
nurm
var nurm =[1,2,3,4,5,6];
nurm
nurm=nurm + 7
nurm
sumaReduce
},1);
	return acc*elemento;
var sumaReduce = nurm.reduce(function(acc,elemento){
var nurm =[1,2,3,4,5,6];
},1)sumaReduce
	return acc*elemento;
var sumaReduce = nurm.reduce(function(acc,elemento){
var nurm =[1,2,3,4,5,6];
},0);sumaReduce
	return acumulador + elemento;
var sumaReduce = nurm.reduce(function(acumulador,elemento){
var nurm =[1,2,3,4,5,6];
sumaReduce
},0);sumaReduce
	return acumulador + elemento;
var sumaReduce = nurm.reduce(function(acumulador,elemento){
var nurm =[1,2,3,4,5,6];
clear
golcito
audi
 var golcito = new Car('VW',1000,'azul');
 var audi = new Car('audi',1500,'verde');
}
	this.color=color;
	this.cv= cv;
	this.marca= marca;
function Car (marca,cv,color){
 var golcito = new Car('VW',1000,'azul');
juan
 var juan = new Persona()
}
	this.apellido= 'perez';
	this.nombre= 'juan';
function Persona (){
  }repeatCharacters()
    repe.push(ins)
    ins=(ins+ins)
  for(ins of string){
  var repe=''
  var ins=''
 function repeatCharacters(string){
string='hola'
  }
    console.log(repe)
    repe.push(ins)
    ins=(ins+ins)
  for(ins of 'hola'){
  var repe=''
 var ins=''
  }
    console.log(repe)
    repe.push(ins)
    ins=(ins+ins)
  for(ins of 'hola'){
  var repe=''
 var ins=''
  }
    console.log(repe)
    repe.push(ins+ins)
  for(ins of 'hola'){
  var repe=''
  var ins=''
  }
    console.log(repe)
    repe.push(ins+ins)
  for(ins of 'hola'){
  var repe=''
  var ins=''
  }
    console.log(repe)
    repe.push(ins+ins)
  for(ins of 'hola'){
  var repe=''
  var ins=''
  }
    console.log(repe)
    repe=ins+ins
  for(ins of 'hola'){
  var repe=''
var ins=''
  }string='hola'
    console.log(repe)
    repe=ins+ins
  for(ins of string){
  var repe=''
 var ins=''
for( repe of 'maria'){console.log(repe)}
var repe =''
for(var repe=0 of 'maria'){console.log(repe)}
for(i=0;i<5;i++){ console.log(i)}
for(i=0;i<5;i++){return console.log(i)}
for(i=0;i<5;i++){console.log(i}
lote.push(556)
lote
lote.push('454')
var lote=0
lote.push('1')
lote
lote.push("1")
var lote
0%2
wis:{vegan:treu}}
rar:{veagn :false},
luna:{vegan :false},
let invitados={
}
    }nui
       var nui=nui+1
    if (nu === true) {
  for(nu of invitados['vengan']){
nui
    }nui
       var nui=nui+1
    if (nu === true) {
  for(nu of invitados['vengan']){
 }vengan(invitados)
  return nui
  }
    }
       var nui=nui+1
    if (nu === true) {
  for(nu of invitados['vengan']){
  // Tu código aca:
  // Tip: Podes usar el metodo for...in
  // vegan(invitados) devuelve 1
  // };
  //     }
  //         vegan: true
  //     Nicky: {
  //     },
  //         vegan: false
  //     Marce: {
  //     },
  //         vegan: false
  //     Sebas: {
  //     },
  //         vegan: false
  //     Luna: {
  // let invitados = {
  // Por ej:
  // debe retornar la cantidad de invitados que son vegan.
  // a una fiesta en donde todos tienen una propiedad "vegan" con un boolean.
  // La funcion llamada "vegan" recibe como argumento un objeto 'invitados', en el objeto tenemos objetos que representan los invitados
function vegan(invitados) {
let invitados {luna{vengan:false },lius{vengan:false}, hh{vengan:true}}
 }
  }
    return nui;
    }
       nui=nui+1
    if (invitados.(nu['venga'])=== true) {
  for(nu in vegan){
  var nui=0;
  // Tu código aca:
  // Tip: Podes usar el metodo for...in
  // vegan(invitados) devuelve 1
  // };
  //     }
  //         vegan: true
  //     Nicky: {
  //     },
  //         vegan: false
  //     Marce: {
  //     },
  //         vegan: false
  //     Sebas: {
  //     },
  //         vegan: false
  //     Luna: {
  // let invitados = {
  // Por ej:
  // debe retornar la cantidad de invitados que son vegan.
  // a una fiesta en donde todos tienen una propiedad "vegan" con un boolean.
  // La funcion llamada "vegan" recibe como argumento un objeto 'invitados', en el objeto tenemos objetos que representan los invitados
function vegan(invitados) {
  }
    return nui;
    }
       nui=nui+1
    if (invitados.(nu['venga'])=== true) {
  for(nu in vegan){
  var nui=0;
  // Tu código aca:
  // Tip: Podes usar el metodo for...in
  // vegan(invitados) devuelve 1
  // };
  //     }
  //         vegan: true
  //     Nicky: {
  //     },
  //         vegan: false
  //     Marce: {
  //     },
  //         vegan: false
  //     Sebas: {
  //     },
  //         vegan: false
  //     Luna: {
  // let invitados = {
  // Por ej:
  // debe retornar la cantidad de invitados que son vegan.
  // a una fiesta en donde todos tienen una propiedad "vegan" con un boolean.
  // La funcion llamada "vegan" recibe como argumento un objeto 'invitados', en el objeto tenemos objetos que representan los invitados
function vegan(invitados) {
clear
buscandoAWally()
}
    return 'Encontre a Wally en la posicion'+i}
  if (array[i]=='Wally') { 
for (var i = 0; i < can; i++) {
  can=array.length
  // Tu código aca:
  // ya que 'Wally' se encuentra en la posicion 3 del arreglo.
  // buscandoAWally(['Dobby', 'Harry', 'Dementor', 'Wally', 'Sirius']) debe retornar 'Encontre a Wally en la posicion 3'
  // Ej:
  // 'Encontre a Wally en la posicion [indice del arreglo donde esta]'
  // La función llamada 'buscandoAWally' recibe como argumento un arreglo de 'string' y debe devolver un 'string' que diga
function buscandoAWally(array) {
}buscandoAWally()
}
    return 'Encontre a Wally en la posicion'+i}
  if (array[i]=='Wally') { 
for (var i = 0; i < array.length; i++) {
  // Tu código aca:
  // ya que 'Wally' se encuentra en la posicion 3 del arreglo.
  // buscandoAWally(['Dobby', 'Harry', 'Dementor', 'Wally', 'Sirius']) debe retornar 'Encontre a Wally en la posicion 3'
  // Ej:
  // 'Encontre a Wally en la posicion [indice del arreglo donde esta]'
  // La función llamada 'buscandoAWally' recibe como argumento un arreglo de 'string' y debe devolver un 'string' que diga
function buscandoAWally(array) {
array=["fhkbfsk","jksjkbkjv","Wally"];
array
f
for
4+4
array=['khkkh','khhkj',Wally];
array['khkkh','khhkj',Wally]
array=['khkkh','khhkj',Wally]
}
  if (array[i]==='Wally') { return 'Encontre a Wally en la posicion'+i}
for (var i = 0; i < array.length; i++) {
soloNumeros()
soloNumeros(array)
  array=[5,1,24,78,81,65]
}
    }
       array.pop()
    if (typeof(array[i])=='string')
  for (var i =0; i <array.length; i++) {
  // Tu código aca:
  // soloNumeros([1, 'Henry', 2]) debe retornar [1, 2]
  // Ej: 
  // Debe devolver un arreglo con solo los enteros.
  // La funcion llamada 'soloNumeros' recibe como argumento un arreglo de enteros y strings llamado 'array'.
function soloNumeros(array) {
lista
lista.pop(3)
lista=[1,58,85,568,58,7,4,59,64,65]
lista
while(lista.length>0){console.log(lista.pop())}
lista=[1,58,85,568,58,7,4,59,64,65]
console.log(lista[i])}
for (var i = 0; i <lista.length; i++) {
lista=[1,58,85,568]
}
for (var i = 0; i <= 60; i++) {
}
for (var i = 0; i <= 60; i++) {
)
lista.pop(3
lista.pop(3)
lista.pop(2)
lista.pop(1)
lista.pop(0)
lista.pop()+10
pp
pp=lista[3]+8
lista[3]
lista
lista.push(78)
lista
str
var str=lista.pop()
lista[3]
lista.push('hola')
lista
lista.push(5)
lista.push(2)
lista.push(1)
var lista=[]
lista[3]
lista=[1,58,85,568]
array[array.length-1]
array[3].length
array.length
array[3][0]
array[3]
array
array[3]+' hijo'
array[4]()
var array = [5,5,null,'toni', function() { console.log('hola')},2,[1,5,1,5,7]]
var array = [5,5,null,'toni' function() { console.log('hola')},2,[1,5,1,5,7]]
array[2]
var array = [5,5, function() { console.log('hola')},2,[1,5,1,5,7]]
array
var array = [5,5, function() {console.log('hola')},2,[1,5,1,5,7]]
array
array[4]
array[2]
var array = [5,5, function() {console.log("hola")},2,[1,5,1,5,7]]
var array = [5,5, funtion() {console.log("hola")},2,[1,5,1,5,7]]
aray [2]
var aray = [5,5,2]
var aray = [5,5, funcion() {console.log("hola")},2]
var array = [5,5, funcion() {console.log("hola")},2]
var array = [5,5, funcion() {console.log("hola")},2,[1,5,1,5,7]]
var array = [5,5,funcion(){console.log("hola")},2,[1,5,1,5,7]]
var array = [5,5,funcion(){console.log("hola"),2,[1,5,1,5,7]]
array
array]
var array = [5]
.help
tablaDelSeis()
}
  }
    return array
    var array= i*6
  for (var i = 0; i <= 60; i++) {
  //Escribe tu código aquí   
  //La función devuelve un array con los resultados de la tabla de multiplicar del 6 en orden creciente.
  //Escribe una función que muestre la tabla de multiplicar del 6 (del 0 al 60).
function tablaDelSeis(){
}
  }
    return array
    var array= i*6
  for (var i = 0; i <= 60; i++) {
  //Escribe tu código aquí   
  //La función devuelve un array con los resultados de la tabla de multiplicar del 6 en orden creciente.
  //Escribe una función que muestre la tabla de multiplicar del 6 (del 0 al 60).
function tablaDelSeis(){
aDelSeis()
TablaDelSeis()
aDelSeis()
  }
    var array= i*6
  for (var i = 0; i <= 60; i++) {
  //Escribe tu código aquí   
  //Escribe una función que muestre la tabla de multiplicar del 6 (del 0 al 60).
unction tablaDelSeis(){
  }console.log(i)
    var array= i*6
for (var i = 0; i <= 60; i++) {
}
	}
        }
          cosole.log(i+','+j)
        for( var j =0; j<m;j++){
	for(var i=0 ; i < n ; i++ ){
}funtion matriz (n,m){
	}
        }
          cosole.log(i+','+j)
        for( var j =0; j<m;j++){
	for(var i=0 ; i < n ; i++ ){
funtion matriz (n,m){
matri(3,4)
}
	}
        }
          cosole.log(i+','+j)
        for( var j =0; j<m;j++){
	for(var i=0 ; i < n ; i++ ){
funtion matriz (n,m){
matriz(3,4)
}
	}
        }
          cosole.log(i+','+j)
        for( var j =0; j<m;j++){
	for(var i=0 ; i < n ; i++ ){
funtion matriz (n,m){
matriz(3,4)
funtion matriz (n,m){
.help
==aaass
===============
58<5
4>2
f==d
5<4
.exit
.help
funtion matriz (n,m){
.help
help
1<5
matriz(3,4)matriz(3,4)
}
	}
        }
          cosole.log(i+','+j)
        for( var j =0; j<m;j++){
	for(var i=0 ; i < n ; i++ ){
funtion matriz (n,m){
clear
matriz(3,4)
	}
        }
          cosole.log(i+','+j)
        for( var j =0; j<m;j++){
	for(var i=0 ; i < n ; i++ ){
funtion matriz (n,m){
for(i=0;i<n;++i){ }
for(i=0;i<n;++i){}
2
for
1!=1
1!=2
1!==2
1>1
0
!!true
!true
if (r){}    
    }
      return " Es vocal"
 if ( letra === "a" || letra === "e" || letra === "i" || letra === "o"  ) { 
npm -- version
1+1
"help"
help